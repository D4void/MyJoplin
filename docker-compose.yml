# Docker compose file to run Joplin Server
# along with a PostgreSQL server.
#
# Create .env file before starting.
#Â Traefik Label are used to reach the server from Internet with https

services:
  db:
    image: postgres:16.2-alpine3.19
    container_name: "MyJoplinPostgres"
    volumes:
      - db_data:/var/lib/postgresql/data
    restart: unless-stopped
    environment:
      - POSTGRES_DB=${POSTGRES_DATABASE}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}     
    networks:
      - joplin

  app:
    image: joplin:2.14.20
    container_name: "MyJoplinApp"
    depends_on:
      - db
    restart: unless-stopped
    environment:
      - APP_PORT=${JOPLIN_PORT}
      - APP_BASE_URL=${APP_BASE_URL}
      - DB_CLIENT=pg
      - POSTGRES_HOST=db
      - POSTGRES_PORT=${POSTGRES_PORT}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DATABASE=${POSTGRES_DATABASE}      
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=MyTraefikNet"
      - "traefik.http.routers.joplincontainer.rule=Host(`${JOPLIN_FQDN}`)"
      - "traefik.http.routers.joplincontainer.entrypoints=websecure"
      - "traefik.http.routers.joplincontainer.tls=true"
      - "traefik.http.routers.joplincontainer.tls.certresolver=mytlschallenge"
      - "traefik.http.routers.joplincontainer.middlewares=security@file"
      - "traefik.http.routers.joplincontainer.service=myjoplinservice"
      - "traefik.http.services.myjoplinservice.loadbalancer.server.port=${JOPLIN_PORT}"
      - "traefik.http.services.myjoplinservice.loadbalancer.server.scheme=http"
    networks:
      - default
      - joplin

volumes:
  db_data:
    driver: local
    driver_opts:
      type: none
      device: ${DB_VOL}
      o: bind

networks:
  default:
    external:
      name: MyTraefikNet

  joplin:
    internal: true
    name: MyJoplinNet
